{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nestjs-microservice-api/./apps/notification-ws/src/app/app.controller.ts","webpack://nestjs-microservice-api/./apps/notification-ws/src/app/app.module.ts","webpack://nestjs-microservice-api/./apps/notification-ws/src/app/app.service.ts","webpack://nestjs-microservice-api/./apps/notification-ws/src/app/gateway/gateway.module.ts","webpack://nestjs-microservice-api/./apps/notification-ws/src/app/gateway/gateway.ts","webpack://nestjs-microservice-api/./apps/notification-ws/src/app/notification-kafka/consumer.service.ts","webpack://nestjs-microservice-api/external commonjs \"@nestjs/common\"","webpack://nestjs-microservice-api/external commonjs \"@nestjs/core\"","webpack://nestjs-microservice-api/external commonjs \"@nestjs/websockets\"","webpack://nestjs-microservice-api/external commonjs \"kafkajs\"","webpack://nestjs-microservice-api/external commonjs \"socket.io\"","webpack://nestjs-microservice-api/external commonjs \"tslib\"","webpack://nestjs-microservice-api/webpack/bootstrap","webpack://nestjs-microservice-api/./apps/notification-ws/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GatewayModule } from './gateway/gateway.module';\n@Module({\n  imports: [GatewayModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to notification!' };\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { KafkaConsumerService } from '../notification-kafka/consumer.service';\nimport { MyGateway } from './gateway';\n\n@Module({\n  providers: [MyGateway, KafkaConsumerService],\n})\nexport class GatewayModule { }\n","import { OnModuleInit } from '@nestjs/common';\nimport {\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\nimport { KafkaConsumerService } from '../notification-kafka/consumer.service';\n@WebSocketGateway({ cors: true })\n\n\nexport class MyGateway implements OnModuleInit {\n  @WebSocketServer()\n  server: Server;\n\n  constructor(private readonly consumer: KafkaConsumerService) { }\n  onModuleInit() {\n    this.server.on('connection', (socket) => {\n      console.log('socket.id', socket.id);\n      console.log('connected');\n      console.log(`${socket.getMaxListeners()} max listler`)\n    });\n    /**\n     * \n     * emit the message to browser via websocket\n     */\n    this.consumer.consume('group-create-notification', {\n      topics: ['create-notification']\n    }, {\n      eachMessage: async ({ topic, partition, message }) => {\n        console.log('-----message in ws----', message)\n        // console.log({\n        //   source: 'Create-Consumer in websocket',\n        //   message: message.value.toString(),\n        //   partition: partition.toString()\n        // })\n        this.onNewMessage(message.value, true)\n      }\n    })\n  }\n\n  @SubscribeMessage('newMessage')\n  onNewMessage(@MessageBody() body: any, isDirect: boolean) {\n\n    console.log('Body', body.toString())\n    this.server.emit('onMessage', {\n      msg: 'New Message',\n      content: isDirect ? JSON.stringify({\n        data: {\n          notifications: [JSON.parse(body.toString())]\n        }\n      }) : JSON.parse(JSON.stringify(body, null, 2))\n    });\n  }\n}\n\n","import { Injectable, OnApplicationShutdown } from \"@nestjs/common\";\nimport { Consumer, ConsumerRunConfig, ConsumerSubscribeTopics, Kafka } from \"kafkajs\";\n\n@Injectable()\nexport class KafkaConsumerService implements OnApplicationShutdown {\n\n\n    private readonly kafka = new Kafka({\n\n        brokers: ['localhost:9092']\n    })\n    private readonly consumers: Consumer[] = []\n\n    async consume(groupId: string, topic: ConsumerSubscribeTopics, config: ConsumerRunConfig) {\n        const consumer = this.kafka.consumer({ groupId });\n        await consumer.connect().catch(e => console.log('Consumer connection error', e));\n        await consumer.subscribe(topic)\n        await consumer.run(config)\n        this.consumers.push(consumer)\n    }\n    async onApplicationShutdown() {\n        for (const consumer of this.consumers) {\n            await consumer.disconnect();\n        }\n    }\n\n}","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"kafkajs\");","module.exports = require(\"socket.io\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 8888;\n  await app.listen(port);\n  Logger.log(\n    `ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}